name: Update V2Ray Subscription

on:
  schedule:
    - cron: '0 2 * * *'  # 每天 2:00 执行
  workflow_dispatch:  # 允许手动触发

permissions:
  contents: write  # 确保有推送权限

jobs:
  update_v2ray:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 确保检出完整历史

      - name: Install dependencies
        run: sudo apt-get install -y jq curl

      - name: Fetch and process subscriptions
        run: |
          # 定义链接
          links=(
            "https://raw.githubusercontent.com/wuqb2i4f/xray-config-toolkit/main/output/base64/mix"
            "https://raw.githubusercontent.com/yebekhe/TelegramV2rayCollector/main/sub/base64/mix"
            "https://raw.githubusercontent.com/mfuu/v2ray/master/v2ray"
            "https://raw.githubusercontent.com/mahdibland/ShadowsocksAggregator/master/Eternity"
            "https://raw.githubusercontent.com/Leon406/SubCrawler/master/sub/share/vless"
            "https://raw.githubusercontent.com/a2470982985/getNode/main/v2ray.txt"
          )

          # 创建一个空的临时文件
          temp_file=$(mktemp)

          for link in "${links[@]}"; do
            # 获取内容并解码
            echo "Fetching and decoding $link..."
            content=$(curl -s "$link" | base64 --decode 2>/dev/null)
            if [ $? -ne 0 ]; then
              echo "Failed to decode content from $link"
              continue
            fi

            # 将内容写入临时文件
            echo "$content" >> "$temp_file"
          done

          # 检查每个地址是否可 ping 通，并写入最终文件
          output_file="json/v2ray"
          : > "$output_file"  # 清空输出文件

          while read -r line; do
            # 提取地址
            address=$(echo "$line" | grep -oP '(?<=://).*?(?=:)')
            if [ -n "$address" ]; then
              echo "Pinging $address..."
              if ping -c 1 "$address" &> /dev/null; then
                echo "$line" >> "$output_file"  # 如果 ping 通，写入文件
              else
                echo "$address is unreachable."
              fi
            fi
          done < "$temp_file"

          # 清理临时文件
          rm "$temp_file"

      - name: Check if v2ray file was updated
        run: |
          if git diff --exit-code json/v2ray; then
            echo "No changes to json/v2ray"
            echo "changed=false" >> $GITHUB_ENV  # 使用环境文件设置输出变量
          else
            echo "Changes detected in json/v2ray"
            echo "changed=true" >> $GITHUB_ENV
          fi

      - name: Commit and push changes
        if: env.changed == 'true'
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git add json/v2ray
          git commit -m 'Update V2Ray subscription file' || echo "No changes to commit."
          git push origin main || echo "Push failed; may be due to permissions or branch protection."
